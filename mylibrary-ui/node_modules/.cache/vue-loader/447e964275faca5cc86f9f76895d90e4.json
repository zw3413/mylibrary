{"remainingRequest":"/Users/weizhang/JAVASHOP/mylibrary-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/weizhang/JAVASHOP/mylibrary-ui/src/views/data/book/detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/weizhang/JAVASHOP/mylibrary-ui/src/views/data/book/detail.vue","mtime":1581813564962},{"path":"/Users/weizhang/JAVASHOP/mylibrary-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weizhang/JAVASHOP/mylibrary-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/weizhang/JAVASHOP/mylibrary-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weizhang/JAVASHOP/mylibrary-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { getPdfViewerUrl, getPublishHouse, getClassification, getAuthor, getFileBaseurl } from '@/api/data.js'\nimport {doCacheImage,doSaveBook,doRepublish,doDeletePost} from '@/api/operation'\n\nexport default {\n  name: 'detail',\n  methods: {\n    closeModal(){\n      this.$parent.fetchData();\n      this.$parent.showDetail=false;\n    },\n    deletePost(){\n\n      doDeletePost(this.data.postid).then(resp=>{\n        if(resp.state){\n          this.$notify({\n            title: '成功',\n            message: '执行成功',\n            type: 'success'\n          });\n        }else{\n          this.$notify.error({\n            title: '失败',\n            message: '执行失败'+resp.message\n          });\n        }\n      })\n\n    },\n    submit(){\n\n      var publishtime=new Date();\n      doSaveBook(this.data).then((resp)=>{\n        if(resp.state){\n          doRepublish(this.data.id).then(resp=>{\n            if(resp.state){\n              this.$notify({\n                title: '成功',\n                message: '执行成功',\n                type: 'success'\n              });\n              this.closeModal()\n            }else{\n              this.$notify.error({\n                title: '失败',\n                message: '执行失败'+resp.message\n              });\n            }\n          })\n        }else{\n          this.$notify.error({\n            title: '失败',\n            message: '执行失败'+resp.message\n          });\n        }\n      })\n\n\n\n      //this.visible=false;\n    },\n    setCover(img){\n      var covera;\n      if(img){\n        covera=img;\n      }else{\n        covera=this.data.fileid+\"/\"+this.coverNo+\".jpg\";\n      }\n      this.data.covera=covera;\n      var param={}\n      param.id=this.data.id;\n      param.covera=covera;\n      doSaveBook(param).then(resp=>{\n        if(resp.state){\n          this.$notify({\n            title: '成功',\n            message: '执行成功',\n            type: 'success'\n          });\n        }else{\n          this.$notify.error({\n            title: '失败',\n            message: '执行失败'+resp.message\n          });\n        }\n      })\n    },\n    setCoverToDefault(){\n      var covera='default/1.jpg';\n      this.setCover(covera);\n\n    },\n    refreshCarousel(){\n      this.refreshCarouselFlag=false;\n      this.$nextTick(()=>{\n        this.refreshCarouselFlag=true;\n      })\n    },\n    cacheImageHandler(){\n      var filepath=this.data.filepath;\n      doCacheImage(filepath,this.cacheImageNumber).then(resp=>{\n        if(resp.state){\n          this.refreshCarousel();\n          this.$notify({\n            title: '成功',\n            message: '执行成功',\n            type: 'success'\n          });\n        }else{\n          this.$notify.error({\n            title: '失败',\n            message: '执行失败'+resp.message\n          });\n        }\n      });\n    },\n    generateImageUrls() {\n      var pdfFolder = this.data.filepath.split('\\.')[0]\n      var imageFolder = this.fileBaseUrl + pdfFolder\n\n      // for(var i=0; i< this.cacheImageNumber ;i++){\n      //   var imageNo=i+1;\n      //   this.imageUrls.push(imageFolder+'/'+imageNo+'.jpg');\n      //\n      // }\n      this.imageUrls.push(imageFolder + '/' + '1.jpg')\n      this.imageUrls.push(imageFolder + '/' + '2.jpg')\n      this.imageUrls.push(imageFolder + '/' + '3.jpg')\n\n      this.coveraUrl = this.fileBaseUrl+this.data.covera;\n\n    },\n    handleCurrentChange(val) {\n      this.currentRow = val\n    },\n    handleTagClose(tag) {\n      this.tagArr.splice(this.tagArr.indexOf(tag), 1)\n      this.data.tag = this.tagArr.join('/')\n    },\n    showTagInput() {\n      this.inputVisible = true\n      this.$nextTick(_ => {\n        this.$refs.saveTagInput.$refs.input.focus()\n      })\n    },\n    handleTagInputConfirm() {\n      let inputValue = this.inputValue\n      if (inputValue) {\n        if (this.tagArr.indexOf(inputValue) < 0) {\n          this.tagArr.push(inputValue)\n        }\n      }\n      this.inputVisible = false\n      this.inputValue = ''\n      this.data.tag = this.tagArr.join('/')\n    }\n  },\n  data() {\n    return {\n      form: {\n        name: '',\n        region: '',\n        date1: '',\n        date2: '',\n        delivery: false,\n        type: [],\n        resource: '',\n        desc: ''\n      },\n      coveraUrl:'',\n      coverNo:1,\n      refreshCarouselFlag:true,\n      cacheImageNumber:3,\n      input1Max:6,\n      input1Min:0,\n      input1Step:1,\n      imageUrls: [],\n      currentRow: null,\n      inputVisible: false,\n      inputValue: '',\n      formLabelWidth: '120px',\n      visible: true,\n      data: this.row,\n      pdfViewer: '',\n      fileBaseUrl: '',\n      classification: [],\n      publishhouse: [],\n      author: []\n\n    }\n  },\n  computed: {\n\n    pdfUrl: function() {\n      return this.pdfViewer + '?file=' +this.fileBaseUrl+ this.data.filepath\n    },\n\n    tagArr: function() {\n      if (this.data.tag) {\n        return this.data.tag.split('/')\n      } else {\n        return []\n      }\n    }\n  },\n  watch: {\n    visible: function(v) {\n      this.$parent.showDetail = v\n      this.visible = true\n    },\n    coverNo:function(v){\n      var pdfFolder = this.data.filepath.split('\\.')[0]\n      var imageFolder = this.fileBaseUrl + pdfFolder\n      this.coveraUrl = imageFolder+'/'+v+'.jpg'\n    }\n    //   ,\n    // cacheImageNumber:function(v){ debugger\n    //   this.generateImageUrls();\n    // }\n  },\n  props: {\n    row: {\n      type: Object\n    }\n  },\n  mounted: function() {\n\n    //this.data=JSON.parse(JSON.stringify(this.templateData)); //this.templateData是父组件传递的对象\n\n    getFileBaseurl().then(resp => {\n      if (resp.state) {\n        this.fileBaseUrl = resp.data\n        this.generateImageUrls()\n      }\n    })\n    getPdfViewerUrl().then(resp => {\n      if (resp.state) {\n        this.pdfViewer = resp.data\n      }\n    })\n    getClassification().then(resp => {\n      if (resp.state) {\n        this.classification = resp.data\n      }\n    })\n    getPublishHouse().then(resp => {\n      if (resp.state) {\n        this.publishhouse = resp.data\n      }\n    })\n    this.author = getAuthor().then(resp => {\n      if (resp.state) {\n        this.author = resp.data\n      }\n    })\n\n  }\n}\n",null]}