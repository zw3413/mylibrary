{"remainingRequest":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/weizhang/JAVASHOP/vue-admin-template-master/src/module/home/page/home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/src/module/home/page/home.vue","mtime":1579664617586},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport bookCard from '../components/book/bookCard.vue'\nimport bookDetail from '../components/book/bookDetail.vue'\nimport bookPreview from '../components/book/bookPreview.vue'\n\nexport default {\n  components: {\n    bookCard,\n    bookDetail,\n    bookPreview\n  },\n  // name: 'app',\n  data: () => ({\n    welcomeMsg: '资料检索服务',\n\n    condition: {\n      language: null,\n      author: null,\n      condition: null,\n      publishhouse: null,\n      tag: null\n    },\n\n    hint: {\n      name: '',\n      publishhouse: '',\n      author: '',\n      publishtimeRange: '',\n      language: '',\n      tag: '',\n      classification: ''\n      // hasSource: false,\n      // hasBDSource: false,\n      // hasOtherSource: false\n    },\n    books: [],\n    currentBook: null,\n    urlContext: '',\n    // restBaseUrl: \"http://139.196.142.70:8090/mylibrary\",\n    restBaseUrl: 'http://139.196.142.70:8090/mylibrary',\n    fileBaseUrl: 'http://139.196.142.70/file/mylibrary/book/',\n    // pdfViewerUrl: \"http://localhost/#/viewer/pdf\",\n    bookPreviewUrl: null,\n    expandSearchFlag: false,\n    activeIndex: 0,\n    page: '1',\n    pageSize: '5'\n\n  }),\n  computed: {\n    noneFileUrl: function() {\n      return this.fileBaseUrl + 'noneFile.png'\n    },\n    headerHight: function() {\n      return this.expandSearchFlag ? '120px' : '60px'\n    },\n    expandIconClass: function() {\n      return this.expandSearchFlag ? 'el-icon-caret-top' : 'el-icon-caret-bottom'\n    },\n    restUrl: function() {\n      return {\n        book: this.restBaseUrl + '/book'\n      }\n    },\n    host: function() {\n      return window.location.host\n    },\n    pathname: function() {\n      return window.location.pathname\n    },\n    hash: function() {\n      return window.location.hash\n    },\n    href: function() {\n      return window.location.href\n    },\n    pdfViewerUrl: function() {\n      return this.href + 'viewer/pdf'\n    }\n\n  },\n  watch: {\n    bookPreviewUrl: function() {\n      window['bookpreview'].location.reload()\n    }\n  },\n  created: function() {\n    this.fetchConditions()\n    this.initParam()\n  },\n  mounted() {\n    this.search()\n  },\n  methods: {\n    initParam: function() {\n\n    },\n    search: function(param) {\n      // alert(this.hint.publicationdateRange)\n      this.hint.page = this.page\n      this.hint.pageSize = this.pageSize\n      fetch(this.restUrl.book, {\n        method: 'post',\n        body: JSON.stringify(this.hint),\n        headers: {\n          // 'user-agent': 'Mozilla/4.0 MDN Example',\n          'content-type': 'application/json'\n        }\n      }).then(resp => {\n        return resp.json()\n      }).then(json => {\n        // if(this.books.length>0 ){\n        var _this = this\n\n        if (!'loadMore' === param) {\n          this.books = []\n        }\n\n        json.forEach(function(v) {\n          _this.books.push(v)\n        })\n        // }\n        // this.books = json;\n      })\n    },\n    loadNextPageBooks() {\n      var cp = eval(this.page)\n      this.page = (++cp) + ''\n      this.search('loadMore')\n    },\n    setCurrentBook: function(book, index) {\n      this.activeIndex = index\n      // 处理classification和tag\n      // var classification = book.classification;\n      // book.absolutePath = book.filepath?this.fileBaseUrl + book.filepath.trim():'';\n      this.bookPreviewUrl = this.pdfViewerUrl + '?file=' + this.fileBaseUrl + book.filepath.trim()\n      this.currentBook = this.books[index]\n    },\n    toggleExpandSearch: function() {\n      this.expandSearchFlag = !this.expandSearchFlag\n    },\n    saveCurrentBook: function(book) {\n      if (book) {\n        debugger\n        // this.setCurrentBook(book);\n        Object.assign(this.books[this.activeIndex], book)\n        // this.books[this.activeIndex]=book;\n      }\n      // 上传currentBook\n      var url = this.restBaseUrl + '/book'\n      fetch(url, {\n        method: 'put',\n        body: JSON.stringify(this.currentBook),\n        headers: {\n          // 'user-agent': 'Mozilla/4.0 MDN Example',\n          'content-type': 'application/json'\n        }\n      }).then(resp => {\n        return resp.json()\n      }).then(json => {\n        console.log(json)\n      })\n      console.log('saveCurrentBook')\n      console.log(this.currentBook)\n    },\n    fetchConditions: function() {\n      var url = this.restBaseUrl + '/table?name='\n      var _this = this\n\n      // 出版社列表\n      fetch(url + 'mlb_book_publishhouse')\n        .then(resp => {\n          return resp.json()\n        })\n        .then(json => {\n          var publishhouse = []\n          json.forEach((v) => {\n            publishhouse.push({\n              label: v ? v.name : '',\n              value: v ? v.name : ''\n            })\n            // publishhouse.push(v.name)\n          })\n          _this.condition.publishhouse = publishhouse\n        })\n      // 分类\n      fetch(url + 'mlb_book_classification')\n        .then(resp => {\n          return resp.json()\n        })\n        .then(json => {\n          var _ = this._\n          var map = {}\n          // 第一次解构\n          _.forEach(json, function(v, i, c) {\n            if (v && v.name) {\n              if (v.name.indexOf('/') > 0) {\n                var [c1, c2] = v.name.split('/')\n                if (map[c1]) {\n                  map[c1].add(c2)\n                } else {\n                  map[c1] = new Set([c2])\n                }\n              }\n            }\n          })\n          var arr = []\n          // 第二次重构\n          _.forEach(map, function(v, k, c) {\n            var o = {\n              value: k,\n              label: k,\n              children: []\n            }\n            var c2 = Array.from(v)\n            _.forEach(c2, function(v, i) {\n              var o1 = {\n                value: v,\n                label: v\n              }\n              o.children.push(o1)\n            })\n            arr.push(o)\n          })\n          this.condition.classification = arr\n        })\n      // 语言\n      fetch(url + 'mlb_book_language')\n        .then((resp) => (resp.json()))\n        .then(json => {\n          var language = []\n          json.forEach((v) => {\n            if (v) {\n              language.push({\n                label: v.name,\n                value: v.name\n              })\n            }\n            // language.push(v.name)\n          })\n          _this.condition.language = language\n        })\n      // tag\n      fetch(url + 'mlb_book_tag')\n        .then(resp => (resp.json()))\n        .then(json => {\n          var tag = []\n          json.forEach((v) => {\n            tag.push({\n              label: v.name,\n              value: v.name\n            })\n            // tag.push(v.name)\n          })\n          _this.condition.tag = tag\n        })\n      // author\n      fetch(url + 'mlb_book_author')\n        .then(resp => (resp.json()))\n        .then(json => {\n          var author = []\n          json.forEach((v) => {\n            // publisher.push({label:v.name,value:v.name})\n            author.push({\n              label: v.name,\n              value: v.name\n            })\n          })\n          _this.condition.author = author\n        })\n    }\n  }\n}\n",null]}