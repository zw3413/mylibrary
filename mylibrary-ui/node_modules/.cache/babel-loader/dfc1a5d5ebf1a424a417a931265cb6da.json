{"remainingRequest":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/babel-loader/lib/index.js!/Users/weizhang/JAVASHOP/vue-admin-template-master/src/statics/viewer/pdf/web/pdf_find_utils.js","dependencies":[{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/src/statics/viewer/pdf/web/pdf_find_utils.js","mtime":1577806166000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCharacterType = getCharacterType;\nexports.CharacterType = void 0;\n\n/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar CharacterType = {\n  SPACE: 0,\n  ALPHA_LETTER: 1,\n  PUNCT: 2,\n  HAN_LETTER: 3,\n  KATAKANA_LETTER: 4,\n  HIRAGANA_LETTER: 5,\n  HALFWIDTH_KATAKANA_LETTER: 6,\n  THAI_LETTER: 7\n};\nexports.CharacterType = CharacterType;\n\nfunction isAlphabeticalScript(charCode) {\n  return charCode < 0x2E80;\n}\n\nfunction isAscii(charCode) {\n  return (charCode & 0xFF80) === 0;\n}\n\nfunction isAsciiAlpha(charCode) {\n  return charCode >=\n  /* a = */\n  0x61 && charCode <=\n  /* z = */\n  0x7A || charCode >=\n  /* A = */\n  0x41 && charCode <=\n  /* Z = */\n  0x5A;\n}\n\nfunction isAsciiDigit(charCode) {\n  return charCode >=\n  /* 0 = */\n  0x30 && charCode <=\n  /* 9 = */\n  0x39;\n}\n\nfunction isAsciiSpace(charCode) {\n  return charCode ===\n  /* SPACE = */\n  0x20 || charCode ===\n  /* TAB = */\n  0x09 || charCode ===\n  /* CR = */\n  0x0D || charCode ===\n  /* LF = */\n  0x0A;\n}\n\nfunction isHan(charCode) {\n  return charCode >= 0x3400 && charCode <= 0x9FFF || charCode >= 0xF900 && charCode <= 0xFAFF;\n}\n\nfunction isKatakana(charCode) {\n  return charCode >= 0x30A0 && charCode <= 0x30FF;\n}\n\nfunction isHiragana(charCode) {\n  return charCode >= 0x3040 && charCode <= 0x309F;\n}\n\nfunction isHalfwidthKatakana(charCode) {\n  return charCode >= 0xFF60 && charCode <= 0xFF9F;\n}\n\nfunction isThai(charCode) {\n  return (charCode & 0xFF80) === 0x0E00;\n}\n/**\n * This function is based on the word-break detection implemented in:\n * https://hg.mozilla.org/mozilla-central/file/tip/intl/lwbrk/WordBreaker.cpp\n */\n\n\nfunction getCharacterType(charCode) {\n  if (isAlphabeticalScript(charCode)) {\n    if (isAscii(charCode)) {\n      if (isAsciiSpace(charCode)) {\n        return CharacterType.SPACE;\n      } else if (isAsciiAlpha(charCode) || isAsciiDigit(charCode) || charCode ===\n      /* UNDERSCORE = */\n      0x5F) {\n        return CharacterType.ALPHA_LETTER;\n      }\n\n      return CharacterType.PUNCT;\n    } else if (isThai(charCode)) {\n      return CharacterType.THAI_LETTER;\n    } else if (charCode ===\n    /* NBSP = */\n    0xA0) {\n      return CharacterType.SPACE;\n    }\n\n    return CharacterType.ALPHA_LETTER;\n  }\n\n  if (isHan(charCode)) {\n    return CharacterType.HAN_LETTER;\n  } else if (isKatakana(charCode)) {\n    return CharacterType.KATAKANA_LETTER;\n  } else if (isHiragana(charCode)) {\n    return CharacterType.HIRAGANA_LETTER;\n  } else if (isHalfwidthKatakana(charCode)) {\n    return CharacterType.HALFWIDTH_KATAKANA_LETTER;\n  }\n\n  return CharacterType.ALPHA_LETTER;\n}",null]}