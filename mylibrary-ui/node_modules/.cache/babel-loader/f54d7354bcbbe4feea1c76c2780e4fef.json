{"remainingRequest":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/babel-loader/lib/index.js!/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/weizhang/JAVASHOP/vue-admin-template-master/src/statics/viewer/pdf/web/pdf_cursor_tools.js","dependencies":[{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/src/statics/viewer/pdf/web/pdf_cursor_tools.js","mtime":1577806166000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFCursorTools = exports.CursorTool = void 0;\n\nvar _grab_to_pan = require(\"./grab_to_pan\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar CursorTool = {\n  SELECT: 0,\n  // The default value.\n  HAND: 1,\n  ZOOM: 2\n};\n/**\n * @typedef {Object} PDFCursorToolsOptions\n * @property {HTMLDivElement} container - The document container.\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} [cursorToolOnLoad] - The cursor tool that will be enabled\n *   on load; the constants from {CursorTool} should be used. The default value\n *   is `CursorTool.SELECT`.\n */\n\nexports.CursorTool = CursorTool;\n\nvar PDFCursorTools =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {PDFCursorToolsOptions} options\n   */\n  function PDFCursorTools(_ref) {\n    var _this = this;\n\n    var container = _ref.container,\n        eventBus = _ref.eventBus,\n        _ref$cursorToolOnLoad = _ref.cursorToolOnLoad,\n        cursorToolOnLoad = _ref$cursorToolOnLoad === void 0 ? CursorTool.SELECT : _ref$cursorToolOnLoad;\n\n    _classCallCheck(this, PDFCursorTools);\n\n    this.container = container;\n    this.eventBus = eventBus;\n    this.active = CursorTool.SELECT;\n    this.activeBeforePresentationMode = null;\n    this.handTool = new _grab_to_pan.GrabToPan({\n      element: this.container\n    });\n\n    this._addEventListeners(); // Defer the initial `switchTool` call, to give other viewer components\n    // time to initialize *and* register 'cursortoolchanged' event listeners.\n\n\n    Promise.resolve().then(function () {\n      _this.switchTool(cursorToolOnLoad);\n    });\n  }\n  /**\n   * @type {number} One of the values in {CursorTool}.\n   */\n\n\n  _createClass(PDFCursorTools, [{\n    key: \"switchTool\",\n\n    /**\n     * NOTE: This method is ignored while Presentation Mode is active.\n     * @param {number} tool - The cursor mode that should be switched to,\n     *                        must be one of the values in {CursorTool}.\n     */\n    value: function switchTool(tool) {\n      var _this2 = this;\n\n      if (this.activeBeforePresentationMode !== null) {\n        return; // Cursor tools cannot be used in Presentation Mode.\n      }\n\n      if (tool === this.active) {\n        return; // The requested tool is already active.\n      }\n\n      var disableActiveTool = function disableActiveTool() {\n        switch (_this2.active) {\n          case CursorTool.SELECT:\n            break;\n\n          case CursorTool.HAND:\n            _this2.handTool.deactivate();\n\n            break;\n\n          case CursorTool.ZOOM:\n          /* falls through */\n\n        }\n      };\n\n      switch (tool) {\n        // Enable the new cursor tool.\n        case CursorTool.SELECT:\n          disableActiveTool();\n          break;\n\n        case CursorTool.HAND:\n          disableActiveTool();\n          this.handTool.activate();\n          break;\n\n        case CursorTool.ZOOM:\n        /* falls through */\n\n        default:\n          console.error(\"switchTool: \\\"\".concat(tool, \"\\\" is an unsupported value.\"));\n          return;\n      } // Update the active tool *after* it has been validated above,\n      // in order to prevent setting it to an invalid state.\n\n\n      this.active = tool;\n\n      this._dispatchEvent();\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_dispatchEvent\",\n    value: function _dispatchEvent() {\n      this.eventBus.dispatch('cursortoolchanged', {\n        source: this,\n        tool: this.active\n      });\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_addEventListeners\",\n    value: function _addEventListeners() {\n      var _this3 = this;\n\n      this.eventBus.on('switchcursortool', function (evt) {\n        _this3.switchTool(evt.tool);\n      });\n      this.eventBus.on('presentationmodechanged', function (evt) {\n        if (evt.switchInProgress) {\n          return;\n        }\n\n        var previouslyActive;\n\n        if (evt.active) {\n          previouslyActive = _this3.active;\n\n          _this3.switchTool(CursorTool.SELECT);\n\n          _this3.activeBeforePresentationMode = previouslyActive;\n        } else {\n          previouslyActive = _this3.activeBeforePresentationMode;\n          _this3.activeBeforePresentationMode = null;\n\n          _this3.switchTool(previouslyActive);\n        }\n      });\n    }\n  }, {\n    key: \"activeTool\",\n    get: function get() {\n      return this.active;\n    }\n  }]);\n\n  return PDFCursorTools;\n}();\n\nexports.PDFCursorTools = PDFCursorTools;",null]}