{"remainingRequest":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/babel-loader/lib/index.js!/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/weizhang/JAVASHOP/vue-admin-template-master/src/statics/viewer/pdf/web/pdf_viewer.js","dependencies":[{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/src/statics/viewer/pdf/web/pdf_viewer.js","mtime":1577806166000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFViewer = void 0;\n\nvar _base_viewer = require(\"./base_viewer\");\n\nvar _pdfjsDist = require(\"pdfjs-dist\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar PDFViewer =\n/*#__PURE__*/\nfunction (_BaseViewer) {\n  _inherits(PDFViewer, _BaseViewer);\n\n  function PDFViewer() {\n    _classCallCheck(this, PDFViewer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PDFViewer).apply(this, arguments));\n  }\n\n  _createClass(PDFViewer, [{\n    key: \"_scrollIntoView\",\n    value: function _scrollIntoView(_ref) {\n      var pageDiv = _ref.pageDiv,\n          _ref$pageSpot = _ref.pageSpot,\n          pageSpot = _ref$pageSpot === void 0 ? null : _ref$pageSpot,\n          _ref$pageNumber = _ref.pageNumber,\n          pageNumber = _ref$pageNumber === void 0 ? null : _ref$pageNumber;\n\n      if (!pageSpot && !this.isInPresentationMode) {\n        var left = pageDiv.offsetLeft + pageDiv.clientLeft;\n        var right = left + pageDiv.clientWidth;\n        var _this$container = this.container,\n            scrollLeft = _this$container.scrollLeft,\n            clientWidth = _this$container.clientWidth;\n\n        if (this._isScrollModeHorizontal || left < scrollLeft || right > scrollLeft + clientWidth) {\n          pageSpot = {\n            left: 0,\n            top: 0\n          };\n        }\n      }\n\n      _get(_getPrototypeOf(PDFViewer.prototype), \"_scrollIntoView\", this).call(this, {\n        pageDiv: pageDiv,\n        pageSpot: pageSpot,\n        pageNumber: pageNumber\n      });\n    }\n  }, {\n    key: \"_getVisiblePages\",\n    value: function _getVisiblePages() {\n      if (this.isInPresentationMode) {\n        // The algorithm in `getVisibleElements` doesn't work in all browsers and\n        // configurations (e.g. Chrome) when Presentation Mode is active.\n        return this._getCurrentVisiblePage();\n      }\n\n      return _get(_getPrototypeOf(PDFViewer.prototype), \"_getVisiblePages\", this).call(this);\n    }\n  }, {\n    key: \"_updateHelper\",\n    value: function _updateHelper(visiblePages) {\n      if (this.isInPresentationMode) {\n        return;\n      }\n\n      var currentId = this._currentPageNumber;\n      var stillFullyVisible = false;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = visiblePages[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var page = _step.value;\n\n          if (page.percent < 100) {\n            break;\n          }\n\n          if (page.id === currentId) {\n            stillFullyVisible = true;\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (!stillFullyVisible) {\n        currentId = visiblePages[0].id;\n      }\n\n      this._setCurrentPageNumber(currentId);\n    }\n  }, {\n    key: \"_setDocumentViewerElement\",\n    get: function get() {\n      return (0, _pdfjsDist.shadow)(this, '_setDocumentViewerElement', this.viewer);\n    }\n  }]);\n\n  return PDFViewer;\n}(_base_viewer.BaseViewer);\n\nexports.PDFViewer = PDFViewer;",null]}