{"remainingRequest":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/babel-loader/lib/index.js!/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/weizhang/JAVASHOP/vue-admin-template-master/src/statics/viewer/pdf/web/pdf_find_bar.js","dependencies":[{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/src/statics/viewer/pdf/web/pdf_find_bar.js","mtime":1577806166000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFFindBar = void 0;\n\nvar _ui_utils = require(\"./ui_utils\");\n\nvar _pdf_find_controller = require(\"./pdf_find_controller\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar MATCHES_COUNT_LIMIT = 1000;\n/**\n * Creates a \"search bar\" given a set of DOM elements that act as controls\n * for searching or for setting search preferences in the UI. This object\n * also sets up the appropriate events for the controls. Actual searching\n * is done by PDFFindController.\n */\n\nvar PDFFindBar =\n/*#__PURE__*/\nfunction () {\n  function PDFFindBar(options) {\n    var _this = this;\n\n    var eventBus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _ui_utils.getGlobalEventBus)();\n    var l10n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _ui_utils.NullL10n;\n\n    _classCallCheck(this, PDFFindBar);\n\n    this.opened = false;\n    this.bar = options.bar || null;\n    this.toggleButton = options.toggleButton || null;\n    this.findField = options.findField || null;\n    this.highlightAll = options.highlightAllCheckbox || null;\n    this.caseSensitive = options.caseSensitiveCheckbox || null;\n    this.entireWord = options.entireWordCheckbox || null;\n    this.findMsg = options.findMsg || null;\n    this.findResultsCount = options.findResultsCount || null;\n    this.findPreviousButton = options.findPreviousButton || null;\n    this.findNextButton = options.findNextButton || null;\n    this.eventBus = eventBus;\n    this.l10n = l10n; // Add event listeners to the DOM elements.\n\n    this.toggleButton.addEventListener('click', function () {\n      _this.toggle();\n    });\n    this.findField.addEventListener('input', function () {\n      _this.dispatchEvent('');\n    });\n    this.bar.addEventListener('keydown', function (e) {\n      switch (e.keyCode) {\n        case 13:\n          // Enter\n          if (e.target === _this.findField) {\n            _this.dispatchEvent('again', e.shiftKey);\n          }\n\n          break;\n\n        case 27:\n          // Escape\n          _this.close();\n\n          break;\n      }\n    });\n    this.findPreviousButton.addEventListener('click', function () {\n      _this.dispatchEvent('again', true);\n    });\n    this.findNextButton.addEventListener('click', function () {\n      _this.dispatchEvent('again', false);\n    });\n    this.highlightAll.addEventListener('click', function () {\n      _this.dispatchEvent('highlightallchange');\n    });\n    this.caseSensitive.addEventListener('click', function () {\n      _this.dispatchEvent('casesensitivitychange');\n    });\n    this.entireWord.addEventListener('click', function () {\n      _this.dispatchEvent('entirewordchange');\n    });\n    this.eventBus.on('resize', this._adjustWidth.bind(this));\n  }\n\n  _createClass(PDFFindBar, [{\n    key: \"reset\",\n    value: function reset() {\n      this.updateUIState();\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(type, findPrev) {\n      this.eventBus.dispatch('find', {\n        source: this,\n        type: type,\n        query: this.findField.value,\n        phraseSearch: true,\n        caseSensitive: this.caseSensitive.checked,\n        entireWord: this.entireWord.checked,\n        highlightAll: this.highlightAll.checked,\n        findPrevious: findPrev\n      });\n    }\n  }, {\n    key: \"updateUIState\",\n    value: function updateUIState(state, previous, matchesCount) {\n      var _this2 = this;\n\n      var notFound = false;\n      var findMsg = '';\n      var status = '';\n\n      switch (state) {\n        case _pdf_find_controller.FindState.FOUND:\n          break;\n\n        case _pdf_find_controller.FindState.PENDING:\n          status = 'pending';\n          break;\n\n        case _pdf_find_controller.FindState.NOT_FOUND:\n          findMsg = this.l10n.get('find_not_found', null, 'Phrase not found');\n          notFound = true;\n          break;\n\n        case _pdf_find_controller.FindState.WRAPPED:\n          if (previous) {\n            findMsg = this.l10n.get('find_reached_top', null, 'Reached top of document, continued from bottom');\n          } else {\n            findMsg = this.l10n.get('find_reached_bottom', null, 'Reached end of document, continued from top');\n          }\n\n          break;\n      }\n\n      this.findField.classList.toggle('notFound', notFound);\n      this.findField.setAttribute('data-status', status);\n      Promise.resolve(findMsg).then(function (msg) {\n        _this2.findMsg.textContent = msg;\n\n        _this2._adjustWidth();\n      });\n      this.updateResultsCount(matchesCount);\n    }\n  }, {\n    key: \"updateResultsCount\",\n    value: function updateResultsCount() {\n      var _this3 = this;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$current = _ref.current,\n          current = _ref$current === void 0 ? 0 : _ref$current,\n          _ref$total = _ref.total,\n          total = _ref$total === void 0 ? 0 : _ref$total;\n\n      if (!this.findResultsCount) {\n        return; // No UI control is provided.\n      }\n\n      var matchesCountMsg = '',\n          limit = MATCHES_COUNT_LIMIT;\n\n      if (total > 0) {\n        if (total > limit) {\n          if (typeof PDFJSDev !== 'undefined' && PDFJSDev.test('MOZCENTRAL')) {\n            // TODO: Remove this hard-coded `[other]` form once plural support has\n            // been implemented in the mozilla-central specific `l10n.js` file.\n            matchesCountMsg = this.l10n.get('find_match_count_limit[other]', {\n              limit: limit\n            }, 'More than {{limit}} matches');\n          } else {\n            matchesCountMsg = this.l10n.get('find_match_count_limit', {\n              limit: limit\n            }, 'More than {{limit}} match' + (limit !== 1 ? 'es' : ''));\n          }\n        } else {\n          if (typeof PDFJSDev !== 'undefined' && PDFJSDev.test('MOZCENTRAL')) {\n            // TODO: Remove this hard-coded `[other]` form once plural support has\n            // been implemented in the mozilla-central specific `l10n.js` file.\n            matchesCountMsg = this.l10n.get('find_match_count[other]', {\n              current: current,\n              total: total\n            }, '{{current}} of {{total}} matches');\n          } else {\n            matchesCountMsg = this.l10n.get('find_match_count', {\n              current: current,\n              total: total\n            }, '{{current}} of {{total}} match' + (total !== 1 ? 'es' : ''));\n          }\n        }\n      }\n\n      Promise.resolve(matchesCountMsg).then(function (msg) {\n        _this3.findResultsCount.textContent = msg;\n\n        _this3.findResultsCount.classList.toggle('hidden', !total); // Since `updateResultsCount` may be called from `PDFFindController`,\n        // ensure that the width of the findbar is always updated correctly.\n\n\n        _this3._adjustWidth();\n      });\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      if (!this.opened) {\n        this.opened = true;\n        this.toggleButton.classList.add('toggled');\n        this.bar.classList.remove('hidden');\n      }\n\n      this.findField.select();\n      this.findField.focus();\n\n      this._adjustWidth();\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (!this.opened) {\n        return;\n      }\n\n      this.opened = false;\n      this.toggleButton.classList.remove('toggled');\n      this.bar.classList.add('hidden');\n      this.eventBus.dispatch('findbarclose', {\n        source: this\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this.opened) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_adjustWidth\",\n    value: function _adjustWidth() {\n      if (!this.opened) {\n        return;\n      } // The find bar has an absolute position and thus the browser extends\n      // its width to the maximum possible width once the find bar does not fit\n      // entirely within the window anymore (and its elements are automatically\n      // wrapped). Here we detect and fix that.\n\n\n      this.bar.classList.remove('wrapContainers');\n      var findbarHeight = this.bar.clientHeight;\n      var inputContainerHeight = this.bar.firstElementChild.clientHeight;\n\n      if (findbarHeight > inputContainerHeight) {\n        // The findbar is taller than the input container, which means that\n        // the browser wrapped some of the elements. For a consistent look,\n        // wrap all of them to adjust the width of the find bar.\n        this.bar.classList.add('wrapContainers');\n      }\n    }\n  }]);\n\n  return PDFFindBar;\n}();\n\nexports.PDFFindBar = PDFFindBar;",null]}