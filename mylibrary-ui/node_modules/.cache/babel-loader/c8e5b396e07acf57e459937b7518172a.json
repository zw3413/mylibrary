{"remainingRequest":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/babel-loader/lib/index.js!/Users/weizhang/JAVASHOP/vue-admin-template-master/src/statics/viewer/pdf/extensions/firefox/tools/l10n.js","dependencies":[{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/src/statics/viewer/pdf/extensions/firefox/tools/l10n.js","mtime":1577806168000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\"; // Small subset of the webL10n API by Fabien Cazenave for PDF.js extension.\n\n(function (window) {\n  var gLanguage = \"\";\n  var gExternalLocalizerServices = null;\n  var gReadyState = \"loading\"; // fetch an l10n objects\n\n  function getL10nData(key) {\n    var response = gExternalLocalizerServices.getStrings(key);\n    var data = JSON.parse(response);\n\n    if (!data) {\n      console.warn(\"[l10n] #\" + key + \" missing for [\" + gLanguage + \"]\");\n    }\n\n    return data;\n  } // replace {{arguments}} with their values\n\n\n  function substArguments(text, args) {\n    if (!args) {\n      return text;\n    }\n\n    return text.replace(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, function (all, name) {\n      return name in args ? args[name] : \"{{\" + name + \"}}\";\n    });\n  } // translate a string\n\n\n  function translateString(key, args, fallback) {\n    var i = key.lastIndexOf(\".\");\n    var name, property;\n\n    if (i >= 0) {\n      name = key.substring(0, i);\n      property = key.substring(i + 1);\n    } else {\n      name = key;\n      property = \"textContent\";\n    }\n\n    var data = getL10nData(name);\n    var value = data && data[property] || fallback;\n\n    if (!value) {\n      return \"{{\" + key + \"}}\";\n    }\n\n    return substArguments(value, args);\n  } // translate an HTML element\n\n\n  function translateElement(element) {\n    if (!element || !element.dataset) {\n      return;\n    } // get the related l10n object\n\n\n    var key = element.dataset.l10nId;\n    var data = getL10nData(key);\n\n    if (!data) {\n      return;\n    } // get arguments (if any)\n    // TODO: more flexible parser?\n\n\n    var args;\n\n    if (element.dataset.l10nArgs) {\n      try {\n        args = JSON.parse(element.dataset.l10nArgs);\n      } catch (e) {\n        console.warn(\"[l10n] could not parse arguments for #\" + key + \"\");\n      }\n    } // translate element\n    // TODO: security check?\n\n\n    for (var k in data) {\n      element[k] = substArguments(data[k], args);\n    }\n  } // translate an HTML subtree\n\n\n  function translateFragment(element) {\n    element = element || document.querySelector(\"html\"); // check all translatable children (= w/ a `data-l10n-id' attribute)\n\n    var children = element.querySelectorAll(\"*[data-l10n-id]\");\n    var elementCount = children.length;\n\n    for (var i = 0; i < elementCount; i++) {\n      translateElement(children[i]);\n    } // translate element itself if necessary\n\n\n    if (element.dataset.l10nId) {\n      translateElement(element);\n    }\n  } // Public API\n\n\n  document.mozL10n = {\n    // get a localized string\n    get: translateString,\n    // get the document language\n    getLanguage: function getLanguage() {\n      return gLanguage;\n    },\n    // get the direction (ltr|rtl) of the current language\n    getDirection: function getDirection() {\n      // http://www.w3.org/International/questions/qa-scripts\n      // Arabic, Hebrew, Farsi, Pashto, Urdu\n      var rtlList = [\"ar\", \"he\", \"fa\", \"ps\", \"ur\"]; // use the short language code for \"full\" codes like 'ar-sa' (issue 5440)\n\n      var shortCode = gLanguage.split(\"-\")[0];\n      return rtlList.includes(shortCode) ? \"rtl\" : \"ltr\";\n    },\n    getReadyState: function getReadyState() {\n      return gReadyState;\n    },\n    setExternalLocalizerServices: function setExternalLocalizerServices(externalLocalizerServices) {\n      gExternalLocalizerServices = externalLocalizerServices;\n      gLanguage = gExternalLocalizerServices.getLocale();\n      gReadyState = \"complete\";\n    },\n    // translate an element or document fragment\n    translate: translateFragment\n  };\n})(void 0);",null]}