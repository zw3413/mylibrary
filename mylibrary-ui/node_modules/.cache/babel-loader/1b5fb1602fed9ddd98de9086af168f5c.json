{"remainingRequest":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/babel-loader/lib/index.js!/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/weizhang/JAVASHOP/vue-admin-template-master/src/statics/viewer/pdf/web/pdf_viewer.js","dependencies":[{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/src/statics/viewer/pdf/web/pdf_viewer.js","mtime":1577806166000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFViewer = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _get2 = _interopRequireDefault(require(\"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/@babel/runtime-corejs2/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/@babel/runtime-corejs2/helpers/inherits\"));\n\nvar _base_viewer = require(\"./base_viewer\");\n\nvar _pdfjsDist = require(\"pdfjs-dist\");\n\n/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar PDFViewer =\n/*#__PURE__*/\nfunction (_BaseViewer) {\n  (0, _inherits2.default)(PDFViewer, _BaseViewer);\n\n  function PDFViewer() {\n    (0, _classCallCheck2.default)(this, PDFViewer);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PDFViewer).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(PDFViewer, [{\n    key: \"_scrollIntoView\",\n    value: function _scrollIntoView(_ref) {\n      var pageDiv = _ref.pageDiv,\n          _ref$pageSpot = _ref.pageSpot,\n          pageSpot = _ref$pageSpot === void 0 ? null : _ref$pageSpot,\n          _ref$pageNumber = _ref.pageNumber,\n          pageNumber = _ref$pageNumber === void 0 ? null : _ref$pageNumber;\n\n      if (!pageSpot && !this.isInPresentationMode) {\n        var left = pageDiv.offsetLeft + pageDiv.clientLeft;\n        var right = left + pageDiv.clientWidth;\n        var _this$container = this.container,\n            scrollLeft = _this$container.scrollLeft,\n            clientWidth = _this$container.clientWidth;\n\n        if (this._isScrollModeHorizontal || left < scrollLeft || right > scrollLeft + clientWidth) {\n          pageSpot = {\n            left: 0,\n            top: 0\n          };\n        }\n      }\n\n      (0, _get2.default)((0, _getPrototypeOf2.default)(PDFViewer.prototype), \"_scrollIntoView\", this).call(this, {\n        pageDiv: pageDiv,\n        pageSpot: pageSpot,\n        pageNumber: pageNumber\n      });\n    }\n  }, {\n    key: \"_getVisiblePages\",\n    value: function _getVisiblePages() {\n      if (this.isInPresentationMode) {\n        // The algorithm in `getVisibleElements` doesn't work in all browsers and\n        // configurations (e.g. Chrome) when Presentation Mode is active.\n        return this._getCurrentVisiblePage();\n      }\n\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(PDFViewer.prototype), \"_getVisiblePages\", this).call(this);\n    }\n  }, {\n    key: \"_updateHelper\",\n    value: function _updateHelper(visiblePages) {\n      if (this.isInPresentationMode) {\n        return;\n      }\n\n      var currentId = this._currentPageNumber;\n      var stillFullyVisible = false;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = visiblePages[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var page = _step.value;\n\n          if (page.percent < 100) {\n            break;\n          }\n\n          if (page.id === currentId) {\n            stillFullyVisible = true;\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (!stillFullyVisible) {\n        currentId = visiblePages[0].id;\n      }\n\n      this._setCurrentPageNumber(currentId);\n    }\n  }, {\n    key: \"_setDocumentViewerElement\",\n    get: function get() {\n      return (0, _pdfjsDist.shadow)(this, '_setDocumentViewerElement', this.viewer);\n    }\n  }]);\n  return PDFViewer;\n}(_base_viewer.BaseViewer);\n\nexports.PDFViewer = PDFViewer;",null]}