{"remainingRequest":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/babel-loader/lib/index.js!/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/weizhang/JAVASHOP/vue-admin-template-master/src/statics/viewer/pdf/web/app_options.js","dependencies":[{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/src/statics/viewer/pdf/web/app_options.js","mtime":1577928343000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/weizhang/JAVASHOP/vue-admin-template-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OptionKind = exports.AppOptions = void 0;\n\nvar _pdfjsDist = require(\"pdfjs-dist\");\n\nvar _viewer_compatibility = require(\"./viewer_compatibility\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar OptionKind = {\n  VIEWER: 0x02,\n  API: 0x04,\n  WORKER: 0x08,\n  PREFERENCE: 0x80\n};\n/**\n * PLEASE NOTE: To avoid introducing unnecessary dependencies, we specify the\n *              values below *explicitly* rather than relying on imported types.\n */\n\nexports.OptionKind = OptionKind;\nvar defaultOptions = {\n  cursorToolOnLoad: {\n    /** @type {number} */\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  defaultUrl: {\n    /** @type {string} */\n    value: 'compressed.tracemonkey-pldi-09.pdf',\n    kind: OptionKind.VIEWER\n  },\n  defaultZoomValue: {\n    /** @type {string} */\n    value: '',\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  disableHistory: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER\n  },\n  disablePageLabels: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n\n  /**\n   * The `disablePreferences` is, conditionally, defined below.\n   */\n  enablePrintAutoRotate: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  enableWebGL: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  eventBusDispatchToDOM: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  externalLinkRel: {\n    /** @type {string} */\n    value: 'noopener noreferrer nofollow',\n    kind: OptionKind.VIEWER\n  },\n  externalLinkTarget: {\n    /** @type {number} */\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  historyUpdateUrl: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  imageResourcesPath: {\n    /** @type {string} */\n    value: './images/',\n    kind: OptionKind.VIEWER\n  },\n\n  /**\n   * The `locale` is, conditionally, defined below.\n   */\n  maxCanvasPixels: {\n    /** @type {number} */\n    value: 16777216,\n    compatibility: _viewer_compatibility.viewerCompatibilityParams.maxCanvasPixels,\n    kind: OptionKind.VIEWER\n  },\n  pdfBugEnabled: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n\n  /**\n   * The `printResolution` is, conditionally, defined below.\n   */\n  renderer: {\n    /** @type {string} */\n    value: 'canvas',\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  renderInteractiveForms: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  sidebarViewOnLoad: {\n    /** @type {number} */\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  scrollModeOnLoad: {\n    /** @type {number} */\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  spreadModeOnLoad: {\n    /** @type {number} */\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  textLayerMode: {\n    /** @type {number} */\n    value: 1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  useOnlyCssZoom: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  viewOnLoad: {\n    /** @type {boolean} */\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  cMapPacked: {\n    /** @type {boolean} */\n    value: true,\n    kind: OptionKind.API\n  },\n  cMapUrl: {\n    /** @type {string} */\n    value: typeof PDFJSDev === 'undefined' || !PDFJSDev.test('PRODUCTION') ? '/static/viewer/pdf/external/bcmaps/' : '/static/viewer/pdf/web/cmaps/',\n    kind: OptionKind.API\n  },\n  disableAutoFetch: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE\n  },\n  disableCreateObjectURL: {\n    /** @type {boolean} */\n    value: false,\n    compatibility: _pdfjsDist.apiCompatibilityParams.disableCreateObjectURL,\n    kind: OptionKind.API\n  },\n  disableFontFace: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE\n  },\n  disableRange: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE\n  },\n  disableStream: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE\n  },\n  docBaseUrl: {\n    /** @type {string} */\n    value: '',\n    kind: OptionKind.API\n  },\n  isEvalSupported: {\n    /** @type {boolean} */\n    value: true,\n    kind: OptionKind.API\n  },\n  maxImageSize: {\n    /** @type {number} */\n    value: -1,\n    kind: OptionKind.API\n  },\n  pdfBug: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API\n  },\n  verbosity: {\n    /** @type {number} */\n    value: 1,\n    kind: OptionKind.API\n  },\n  workerPort: {\n    /** @type {Object} */\n    value: null,\n    kind: OptionKind.WORKER\n  },\n  workerSrc: {\n    /** @type {string} */\n    value: typeof PDFJSDev === 'undefined' || !PDFJSDev.test('PRODUCTION') ? '/static/viewer/pdf/src/worker_loader.js' : '../build/pdf.worker.js',\n    kind: OptionKind.WORKER\n  }\n};\n\nif (typeof PDFJSDev === 'undefined' || PDFJSDev.test('!PRODUCTION || (GENERIC && !LIB)')) {\n  defaultOptions.disablePreferences = {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER\n  };\n  defaultOptions.locale = {\n    /** @type {string} */\n    value: typeof navigator !== 'undefined' ? navigator.language : 'en-US',\n    kind: OptionKind.VIEWER\n  };\n  defaultOptions.printResolution = {\n    /** @type {number} */\n    value: 150,\n    kind: OptionKind.VIEWER\n  };\n}\n\nvar userOptions = Object.create(null);\n\nvar AppOptions =\n/*#__PURE__*/\nfunction () {\n  function AppOptions() {\n    _classCallCheck(this, AppOptions);\n\n    throw new Error('Cannot initialize AppOptions.');\n  }\n\n  _createClass(AppOptions, null, [{\n    key: \"get\",\n    value: function get(name) {\n      var userOption = userOptions[name];\n\n      if (userOption !== undefined) {\n        return userOption;\n      }\n\n      var defaultOption = defaultOptions[name];\n\n      if (defaultOption !== undefined) {\n        return defaultOption.compatibility || defaultOption.value;\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      var kind = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var options = Object.create(null);\n\n      for (var name in defaultOptions) {\n        var defaultOption = defaultOptions[name];\n\n        if (kind) {\n          if ((kind & defaultOption.kind) === 0) {\n            continue;\n          }\n\n          if (kind === OptionKind.PREFERENCE) {\n            var value = defaultOption.value,\n                valueType = _typeof(value);\n\n            if (valueType === 'boolean' || valueType === 'string' || valueType === 'number' && Number.isInteger(value)) {\n              options[name] = value;\n              continue;\n            }\n\n            throw new Error(\"Invalid type for preference: \".concat(name));\n          }\n        }\n\n        var userOption = userOptions[name];\n        options[name] = userOption !== undefined ? userOption : defaultOption.compatibility || defaultOption.value;\n      }\n\n      return options;\n    }\n  }, {\n    key: \"set\",\n    value: function set(name, value) {\n      userOptions[name] = value;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(name) {\n      delete userOptions[name];\n    }\n  }]);\n\n  return AppOptions;\n}();\n\nexports.AppOptions = AppOptions;",null]}